rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // --- Helper Functions ---
    function isAuth() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      // Check if the requesting user is the owner of the document.
      return request.auth.uid == userId;
    }
    
    function getUserRole(userId) {
      // Get the role of a user from the /users collection.
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }
    
    function isAdmin() {
      // Check if the requesting user has the 'Admin' role.
      // This is safe because the read on /users is protected.
      return isAuth() && getUserRole(request.auth.uid) == 'Admin';
    }

    // --- Collection Rules ---

    // Users can create their own profile, but only admins can modify or delete others.
    match /users/{userId} {
      allow create: if isAuth() && isOwner(userId);
      allow list, read: if isAuth();
      allow update: if isAuth() && (isOwner(userId) || isAdmin());
      allow delete: if isAdmin();
    }
    
    // Anchors can be read by anyone authenticated, but only created/deleted by Admins.
    match /anchors/{anchorId} {
      allow list, read, update, create: if isAuth();
      allow delete: if isAdmin();
    }
    
    // Any authenticated user can manage dealers, vendors, tasks, and logs.
    // In a more complex scenario, these rules could be tightened to check
    // for assignedTo fields or manager relationships.
    match /dealers/{dealerId} {
      allow read, list, create, update, delete: if isAuth();
    }

    match /vendors/{vendorId} {
      allow read, list, create, update, delete: if isAuth();
    }
    
    match /tasks/{taskId} {
      allow read, list, create, update, delete: if isAuth();
    }
    
    match /activityLogs/{logId} {
      allow read, list, create, update, delete: if isAuth();
    }

    match /daily_activities/{activityId} {
       allow read, list, create, update, delete: if isAuth();
    }
  }
}
