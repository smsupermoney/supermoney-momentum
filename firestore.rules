
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }

    // Checks if the requesting user has a specific role.
    function hasRole(role) {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    // Checks if the requesting user is the owner of the document.
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // --- User Collection Rules ---
    match /users/{userId} {
      // Any signed-in user can read user profiles and list all users for dropdowns etc.
      allow get, list: if isSignedIn();

      // A user can create their own profile upon first sign-in.
      allow create: if isOwner(userId);

      // A user can update their own profile, or an Admin can update any profile.
      allow update: if isOwner(userId) || hasRole('Admin');
      
      // Only an Admin can delete a user.
      allow delete: if hasRole('Admin');
    }

    // --- Data Collection Rules ---
    // Generic rule for data collections: any signed-in user can perform CRUD,
    // except for deletion, which is reserved for Admins. This is a secure
    // default for an internal enterprise application.

    match /anchors/{docId} {
      allow get, list, create, update: if isSignedIn();
      allow delete: if hasRole('Admin');
    }

    match /dealers/{docId} {
      allow get, list, create, update: if isSignedIn();
      allow delete: if hasRole('Admin');
    }

    match /vendors/{docId} {
      allow get, list, create, update: if isSignedIn();
      allow delete: if hasRole('Admin');
    }

    match /tasks/{docId} {
      allow get, list, create, update: if isSignedIn();
      allow delete: if hasRole('Admin');
    }

    match /activityLogs/{docId} {
      allow get, list, create, update: if isSignedIn();
      allow delete: if hasRole('Admin');
    }
    
    match /daily_activities/{docId} {
       allow get, list, create, update: if isSignedIn();
       allow delete: if hasRole('Admin');
    }
  }
}
